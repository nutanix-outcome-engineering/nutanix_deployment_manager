{
  "openapi": "3.0.0",
  "info": {
    "title": "rx-lite",
    "version": "1.0",
    "contact": {
      "name": "OE"
    },
    "description": "API for RX Lite  "
  },
  "servers": [
    {
      "url": "https://ndm.nutanix.com:8443/api"
    }
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "summary": "",
        "operationId": "auth.login",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "token": {
                "schema": {
                  "type": "string"
                },
                "description": "PASETO"
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "description": "Endpoint to auth a session",
        "security": []
      },
      "parameters": []
    },
    "/import/csv": {
      "post": {
        "summary": "Create New User",
        "operationId": "import.csv",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "headers": {
                    "oneOf": [
                      {
                        "type": "array",
                        "items": {}
                      },
                      {
                        "type": "string"
                      }
                    ]
                  },
                  "csv": {
                    "type": "string",
                    "format": "binary"
                  }
                },
                "required": [
                  "headers",
                  "csv"
                ]
              }
            }
          },
          "description": "Post the necessary fields for the API to create a new user."
        },
        "description": "Bulk import nodes and clusters via csv",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/import/foundation/provision-network": {
      "parameters": [],
      "post": {
        "summary": "",
        "operationId": "import.foundation.provision-network",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Node"
                }
              }
            }
          }
        }
      }
    },
    "/import/foundation/discover": {
      "get": {
        "summary": "Start Discovery via Foundation",
        "operationId": "import.foundation.discover",
        "responses": {
          "200": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {}
                }
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/import/ip/range": {
      "post": {
        "summary": "",
        "operationId": "import.ip.range",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "start": {
                    "type": "string",
                    "format": "ipv4"
                  },
                  "stop": {
                    "type": "string",
                    "format": "ipv4"
                  },
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "ipmi": {
                        "$ref": "#/components/schemas/Credential"
                      },
                      "host": {
                        "$ref": "#/components/schemas/Credential"
                      }
                    }
                  }
                },
                "required": [
                  "start",
                  "stop"
                ]
              }
            },
            "application/xml": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          "description": ""
        },
        "description": "Bulk import of nodes via IP Range."
      },
      "parameters": []
    },
    "/import/nodes": {
      "post": {
        "summary": "",
        "operationId": "import.nodes",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "type": "object",
                    "properties": {
                      "ipmi": {
                        "$ref": "#/components/schemas/Credential"
                      },
                      "host": {
                        "$ref": "#/components/schemas/Credential"
                      }
                    }
                  },
                  "nodes": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Node"
                    }
                  }
                },
                "required": [
                  "nodes"
                ]
              }
            },
            "application/xml": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          "description": ""
        },
        "description": "Bulk import of nodes via IP Range."
      },
      "parameters": []
    },
    "/nodes/ingesting": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IngestingNode"
                  }
                }
              }
            }
          }
        },
        "operationId": "nodes.ingesting.getAll",
        "description": "Get all currently ingesting nodes."
      },
      "parameters": [],
      "delete": {
        "summary": "",
        "operationId": "nodes.ingesting.delete",
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ingestionIDs": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "description": ""
        }
      }
    },
    "/nodes/ingesting/retry": {
      "parameters": [],
      "post": {
        "summary": "",
        "operationId": "nodes.ingesting.retry",
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "description": "Retry discovery of list of nodes.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ingestionIDs": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                      "type": "integer"
                    }
                  }
                },
                "required": [
                  "ingestionIDs"
                ]
              }
            }
          }
        }
      }
    },
    "/nodes/ingesting/{id}": {
      "patch": {
        "description": "Update data of ingesting node",
        "operationId": "nodes.ingesting.update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IngestingNode"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Node"
              }
            }
          }
        }
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/nodes/ingesting/{id}/retry": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "",
        "operationId": "nodes.ingesting.retry",
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "description": "Retry discovery process of specific node."
      }
    },
    "/nodes": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Node"
                  }
                }
              }
            }
          }
        },
        "operationId": "nodes.nodes.getAll",
        "description": "Get all Nodes."
      },
      "post": {
        "summary": "",
        "operationId": "nodes.nodes.add",
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Node"
                }
              }
            }
          }
        },
        "description": "Add nodes."
      }
    },
    "/nodes/{serial}": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Node"
                }
              }
            }
          }
        },
        "operationId": "nodes.nodes.get",
        "description": "Get specific node information."
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "serial",
          "in": "path",
          "description": "Serial Number of Node",
          "required": true
        }
      ],
      "patch": {
        "summary": "",
        "operationId": "nodes.nodes.update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Node"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Node"
              }
            }
          }
        }
      }
    },
    "/tasks": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskFlow"
                  }
                }
              }
            }
          }
        },
        "operationId": "tasks.getAll",
        "description": "Get Task list"
      },
      "parameters": []
    },
    "/tasks/{taskId}": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskFlow"
                }
              }
            }
          }
        },
        "operationId": "tasks.task",
        "description": "Get TaskFlow status"
      },
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "taskId",
          "in": "path",
          "required": true,
          "description": "Task Flow UUID"
        }
      ]
    },
    "/sites": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteList"
                }
              }
            }
          }
        },
        "operationId": "sites.getAll",
        "description": "Get all Sites."
      },
      "parameters": [],
      "post": {
        "summary": "",
        "operationId": "sites.add",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Site"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Site"
              }
            }
          }
        }
      }
    },
    "/sites/{id}": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Site"
                }
              }
            }
          }
        },
        "operationId": "sites.get",
        "description": "Get specific Site"
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "description": "id of Site",
          "required": true
        }
      ],
      "patch": {
        "summary": "",
        "operationId": "sites.update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Site"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Site"
              }
            }
          }
        }
      }
    },
    "/sites/{id}/aos": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "id of Site"
        }
      ],
      "post": {
        "summary": "Create new AOS for site",
        "tags": [],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AOS"
                }
              }
            }
          }
        },
        "operationId": "sites.aos.add",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "p0c3abp23v3nw"
                    }
                  },
                  "version": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "xizxrmqelcwbx"
                    }
                  },
                  "status": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "m1i255bl6qiqc"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sites/{id}/aos/{aosId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "id of the site"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "aosId",
          "in": "path",
          "required": true,
          "description": "id of the AOS"
        }
      ],
      "patch": {
        "summary": "",
        "operationId": "sites.aos.update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AOS"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "4bcvi0yh88a83"
                    }
                  },
                  "version": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "9cj8sngvetbov"
                    }
                  },
                  "status": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "nywtibe8w8uce"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sites/{id}/hypervisor": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "id of Site"
        }
      ],
      "post": {
        "summary": "Create new Hypervisor for site",
        "tags": [],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hypervisor"
                }
              }
            }
          }
        },
        "operationId": "sites.hypervisor.add",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "p0c3abp23v3nw"
                    }
                  },
                  "version": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "xizxrmqelcwbx"
                    }
                  },
                  "status": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "m1i255bl6qiqc"
                    }
                  },
                  "type": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "h69l9eauhj8zm"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sites/{id}/hypervisor/{hypervisorId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "id of the site"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "hypervisorId",
          "in": "path",
          "required": true,
          "description": "id of the hypervisor"
        }
      ],
      "patch": {
        "summary": "",
        "operationId": "sites.hypervisor.update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hypervisor"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "4bcvi0yh88a83"
                    }
                  },
                  "version": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "9cj8sngvetbov"
                    }
                  },
                  "status": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "nywtibe8w8uce"
                    }
                  },
                  "type": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "6x8zlk20s5q0x"
                    }
                  }
                }
              }
            }
          }
        },
        "description": ""
      }
    },
    "/racks/{id}": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rack"
                }
              }
            }
          }
        },
        "operationId": "racks.get",
        "description": "Get specific Rack"
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "description": "id of Site",
          "required": true
        }
      ],
      "patch": {
        "summary": "",
        "operationId": "racks.update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rack"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Rack"
              }
            }
          }
        },
        "description": "Update single rack"
      }
    },
    "/switches/{id}": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Switch"
                }
              }
            }
          }
        },
        "operationId": "switches.get",
        "description": "Get specific Switch"
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "description": "id of Site",
          "required": true
        }
      ],
      "patch": {
        "summary": "",
        "operationId": "switches.update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Switch"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Switch"
              }
            }
          }
        },
        "description": "Update single switch"
      }
    },
    "/racks": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "nullable": true,
                  "items": {
                    "$ref": "#/components/schemas/Rack"
                  }
                }
              }
            }
          }
        },
        "operationId": "racks.getAll",
        "description": "Get List of Racks"
      },
      "post": {
        "summary": "",
        "operationId": "racks.add",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rack"
                }
              }
            }
          }
        },
        "description": "Add Rack",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Rack"
              }
            }
          }
        }
      }
    },
    "/switches": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Switch"
                  }
                }
              }
            }
          }
        },
        "operationId": "switches.getAll",
        "description": "Get All Switches"
      },
      "post": {
        "summary": "",
        "operationId": "switches.add",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Switch"
                }
              }
            }
          }
        },
        "description": "Add Switch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Switch"
              }
            }
          }
        }
      }
    },
    "/cluster": {
      "post": {
        "summary": "Create new cluster from nodes",
        "tags": [],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cluster"
                }
              }
            }
          }
        },
        "operationId": "cluster.create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Cluster"
              }
            }
          }
        },
        "description": "Create new Cluster"
      },
      "parameters": [],
      "get": {
        "summary": "Get All Clusters",
        "operationId": "cluster.getAll",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Cluster"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cluster/{id}": {
      "parameters": [],
      "delete": {
        "summary": "",
        "operationId": "cluster.delete",
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "description": "Delete a cluster from NDM."
      }
    },
    "/cluster/{id}/rebuild": {
      "parameters": [],
      "post": {
        "summary": "",
        "operationId": "cluster.rebuild",
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "description": "Retry the clsuter build process"
      }
    },
    "/uploads": {
      "parameters": [],
      "post": {
        "summary": "",
        "operationId": "uploads.create",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "ndm-upload-type",
            "description": "Upload type",
            "required": true
          }
        ]
      },
      "options": {
        "summary": "",
        "operationId": "uploads.options",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/uploads/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "patch": {
        "summary": "",
        "operationId": "uploads.patch",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "content": {
            "application/offset+octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "ndm-upload-type",
            "required": true
          }
        ]
      },
      "head": {
        "summary": "",
        "operationId": "uploads.head",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "summary": "",
        "operationId": "uploads.delete",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/foundation": {
      "parameters": [],
      "get": {
        "summary": "Get all foundation VMs for site",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FoundationVM"
                  }
                }
              }
            }
          }
        },
        "operationId": "foundation.getAll",
        "description": ""
      },
      "post": {
        "summary": "Create new foundation VM entry",
        "tags": [],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FoundationVM"
                }
              }
            }
          }
        },
        "operationId": "foundation.create",
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ip": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "ps2yb6o3a3eos"
                    }
                  },
                  "credentials": {
                    "$ref": "#/components/schemas/Credential"
                  },
                  "site": {
                    "$ref": "#/components/schemas/Site"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/foundation/{fvmId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "fvmId",
          "in": "path",
          "required": true,
          "description": "ID of the foundation VM"
        }
      ],
      "get": {
        "summary": "Get specific foundation VM details",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FoundationVM"
                }
              }
            }
          }
        },
        "operationId": "foundation.get"
      },
      "patch": {
        "summary": "Update foundation VM",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "operationId": "foundation.update"
      },
      "delete": {
        "summary": "Delete foundation VM",
        "tags": [],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "operationId": "foundation.delete",
        "description": ""
      }
    },
    "/me/resetpassword": {
      "post": {
        "summary": "",
        "operationId": "user.resetpassword",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "oldPass": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "exxyq0lq1xv3j"
                    }
                  },
                  "newPass": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "cgbhz5vmfiszv"
                    }
                  },
                  "newPassVerify": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "q2bmhzm0w0wve"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "IngestingNode": {
        "title": "IngestingNode",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "taskData": {
            "$ref": "#/components/schemas/TaskFlow"
          },
          "ingestState": {
            "type": "string"
          },
          "failureReason": {
            "type": "string",
            "nullable": true
          },
          "serial": {
            "type": "string",
            "nullable": true
          },
          "chassisSerial": {
            "type": "string",
            "nullable": true
          },
          "ipmi": {
            "$ref": "#/components/schemas/IPDefinition"
          },
          "cvm": {
            "$ref": "#/components/schemas/IPDefinition"
          },
          "host": {
            "$ref": "#/components/schemas/IPDefinition"
          }
        },
        "required": [
          "id"
        ]
      },
      "Node": {
        "title": "Node",
        "type": "object",
        "properties": {
          "serial": {
            "type": "string"
          },
          "chassisSerial": {
            "type": "string",
            "nullable": true
          },
          "ipv6Address": {
            "type": "string"
          },
          "position": {
            "type": "string"
          },
          "ipmi": {
            "$ref": "#/components/schemas/IPDefinition"
          },
          "host": {
            "$ref": "#/components/schemas/IPDefinition"
          },
          "cvm": {
            "$ref": "#/components/schemas/IPDefinition"
          }
        },
        "required": [
          "serial"
        ]
      },
      "TaskFlow": {
        "title": "TaskFlow",
        "type": "object",
        "description": "TaskFlow object",
        "properties": {
          "id": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "statistics": {
            "type": "object",
            "properties": {
              "completedTasks": {
                "type": "number"
              },
              "failedTasks": {
                "type": "number"
              },
              "totalTasks": {
                "type": "number"
              }
            }
          },
          "startDate": {
            "type": "string",
            "x-stoplight": {
              "id": "jn2l0e1uga0f6"
            },
            "format": "date-time",
            "nullable": true
          },
          "stopDate": {
            "type": "string",
            "x-stoplight": {
              "id": "e7yt32jwiygm6"
            },
            "format": "date-time",
            "nullable": true
          },
          "progress": {
            "type": "object",
            "x-stoplight": {
              "id": "v9hbpth39cczv"
            },
            "properties": {
              "progress": {
                "x-stoplight": {
                  "id": "yswu4rcpgzuis"
                },
                "type": "number"
              },
              "subTasks": {
                "type": "array",
                "x-stoplight": {
                  "id": "l4cln7ibn00h9"
                },
                "items": {
                  "x-stoplight": {
                    "id": "wof15enootwx1"
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "IPDefinition": {
        "title": "IPDefinition",
        "x-stoplight": {
          "id": "uq9v58mmb1ml1"
        },
        "type": "object",
        "description": "Details about an IP",
        "properties": {
          "ip": {
            "type": "string",
            "nullable": true
          },
          "subnet": {
            "type": "string",
            "nullable": true
          },
          "gateway": {
            "type": "string",
            "nullable": true
          },
          "vlan": {
            "type": "number",
            "nullable": true
          },
          "hostname": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Site": {
        "title": "Site",
        "type": "object",
        "description": "Site Model",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "infraCluster": {
            "type": "integer",
            "nullable": true
          },
          "ntpServers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "dnsServers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "pcServers": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "$ref": "#/components/schemas/PrismCentral"
            }
          },
          "vCenterServers": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "$ref": "#/components/schemas/vCenter"
            }
          },
          "aosList": {
            "type": "array",
            "x-stoplight": {
              "id": "wln6s2vdpf9mi"
            },
            "items": {
              "$ref": "#/components/schemas/AOS"
            }
          },
          "hypervisorList": {
            "type": "array",
            "x-stoplight": {
              "id": "fcjfvcmfe3kq5"
            },
            "items": {
              "$ref": "#/components/schemas/Hypervisor"
            }
          },
          "ldap": {
            "type": "object",
            "x-stoplight": {
              "id": "tii8ye901ne07"
            },
            "properties": {
              "directoryName": {
                "type": "string",
                "x-stoplight": {
                  "id": "xhvkqilz4f2f3"
                },
                "nullable": true
              },
              "directoryURL": {
                "type": "string",
                "x-stoplight": {
                  "id": "4a9jvtd0kjf7l"
                },
                "nullable": true
              },
              "": {
                "$ref": "#/components/schemas/Credential"
              }
            }
          },
          "prism": {
            "type": "object",
            "x-stoplight": {
              "id": "kwpgz6roodq54"
            },
            "properties": {
              "certificate": {
                "type": "string",
                "x-stoplight": {
                  "id": "j5zlx8v8flg2x"
                },
                "nullable": true
              },
              "key": {
                "type": "string",
                "x-stoplight": {
                  "id": "nrtzoqj0f8fy1"
                },
                "format": "binary",
                "nullable": true
              },
              "caChain": {
                "type": "string",
                "x-stoplight": {
                  "id": "4sdxlau102iey"
                },
                "nullable": true
              }
            }
          },
          "smtp": {
            "type": "object",
            "x-stoplight": {
              "id": "p0j23kni5afc0"
            },
            "properties": {
              "serverAddress": {
                "type": "string",
                "x-stoplight": {
                  "id": "96jhjy7mexfun"
                },
                "nullable": true
              },
              "fromEmail": {
                "type": "string",
                "x-stoplight": {
                  "id": "rv1auipbkpb7l"
                },
                "nullable": true
              },
              "port": {
                "type": "string",
                "x-stoplight": {
                  "id": "4hyhixdfsh513"
                },
                "nullable": true
              },
              "securityMode": {
                "type": "string",
                "x-stoplight": {
                  "id": "8rh031s9yaf61"
                },
                "nullable": true
              },
              "credentials": {
                "$ref": "#/components/schemas/Credential"
              }
            }
          },
          "lcmDarksite": {
            "type": "string",
            "x-stoplight": {
              "id": "n9mlx1flxlbmy"
            },
            "nullable": true
          }
        }
      },
      "SiteList": {
        "title": "SiteList",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Site"
        }
      },
      "Error": {
        "title": "Error",
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {}
          }
        }
      },
      "Rack": {
        "title": "Rack",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "siteID": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "row": {
            "type": "string",
            "nullable": true
          },
          "column": {
            "type": "string",
            "nullable": true
          },
          "datahall": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Switch": {
        "title": "Switch",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "type": {
            "type": "string"
          },
          "rackID": {
            "type": "integer"
          },
          "ip": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "rackUnit": {
            "type": "integer",
            "nullable": true
          }
        }
      },
      "Credential": {
        "title": "Credential",
        "x-stoplight": {
          "id": "6a2b29f0b122d"
        },
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "description": "Username password tupple object"
      },
      "Cluster": {
        "title": "Cluster",
        "x-stoplight": {
          "id": "3gfoymtygym9b"
        },
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "cluster": {
            "$ref": "#/components/schemas/IPDefinition"
          },
          "vcenter": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IPDefinition"
              },
              {
                "$ref": "#/components/schemas/vCenter"
              }
            ]
          },
          "prismCentral": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IPDefinition"
              },
              {
                "$ref": "#/components/schemas/PrismCentral"
              }
            ]
          },
          "nodes": {
            "type": "array",
            "minItems": 0,
            "items": {
              "$ref": "#/components/schemas/Node"
            }
          },
          "hypervisor": {
            "$ref": "#/components/schemas/Hypervisor"
          },
          "aos": {
            "$ref": "#/components/schemas/AOS"
          },
          "ingestDate": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "lastModified": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "site": {
            "$ref": "#/components/schemas/Site"
          }
        }
      },
      "PrismCentral": {
        "title": "PrismCentral",
        "x-stoplight": {
          "id": "s0xjvx812tzou"
        },
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "displayName": {
            "type": "string"
          },
          "hostnameOrIP": {
            "type": "string"
          },
          "credentials": {
            "$ref": "#/components/schemas/Credential"
          },
          "createDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "default": {
            "type": "boolean"
          }
        }
      },
      "vCenter": {
        "title": "vCenter",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "displayName": {
            "type": "string"
          },
          "hostnameOrIP": {
            "type": "string"
          },
          "credentials": {
            "$ref": "#/components/schemas/Credential"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastModified": {
            "type": "string",
            "format": "date-time"
          },
          "default": {
            "type": "boolean"
          }
        },
        "x-stoplight": {
          "id": "c03aedda0f8eb"
        }
      },
      "AOS": {
        "title": "AOS",
        "x-stoplight": {
          "id": "5dkqtrzx0ailb"
        },
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "x-stoplight": {
              "id": "xk57tm9n9ov0f"
            }
          },
          "name": {
            "type": "string",
            "x-stoplight": {
              "id": "j89jug28ql01n"
            }
          },
          "version": {
            "type": "string",
            "x-stoplight": {
              "id": "5rt6ha5qrpvsj"
            }
          },
          "filename": {
            "type": "string",
            "x-stoplight": {
              "id": "9rkiei8q5c5cb"
            },
            "nullable": true
          },
          "status": {
            "type": "string",
            "x-stoplight": {
              "id": "f6p6xdgyxzypw"
            }
          },
          "lastModified": {
            "type": "string",
            "x-stoplight": {
              "id": "soldnv9po5gk7"
            },
            "format": "date-time"
          },
          "createdDate": {
            "type": "string",
            "x-stoplight": {
              "id": "trpucn06rnete"
            },
            "format": "date-time"
          },
          "transferStatus": {
            "type": "string",
            "x-stoplight": {
              "id": "oh8m6tjrnig57"
            }
          }
        }
      },
      "Hypervisor": {
        "title": "Hypervisor",
        "x-stoplight": {
          "id": "dbarcxms6e3yv"
        },
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "x-stoplight": {
              "id": "hblci1eksjhyf"
            }
          },
          "name": {
            "type": "string",
            "x-stoplight": {
              "id": "6jbad1b5w87oh"
            }
          },
          "version": {
            "type": "string",
            "x-stoplight": {
              "id": "hxg1wsh3d78qf"
            }
          },
          "type": {
            "type": "string",
            "x-stoplight": {
              "id": "n9ixvbmzk2bg7"
            }
          },
          "filename": {
            "type": "string",
            "x-stoplight": {
              "id": "5kt8da1r4ehm3"
            },
            "nullable": true
          },
          "status": {
            "type": "string",
            "x-stoplight": {
              "id": "n8xprc0ujlqjy"
            }
          },
          "lastModified": {
            "type": "string",
            "x-stoplight": {
              "id": "e5nyxh5qwyhzs"
            },
            "format": "date-time"
          },
          "createdDate": {
            "type": "string",
            "x-stoplight": {
              "id": "g58g7wqr8y7x1"
            },
            "format": "date-time"
          },
          "transferStatus": {
            "type": "string",
            "x-stoplight": {
              "id": "iltlu0jqzta0m"
            }
          }
        }
      },
      "FoundationVM": {
        "title": "FoundationVM",
        "x-stoplight": {
          "id": "iw7uxboyxq6py"
        },
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "x-stoplight": {
              "id": "nf0tz98irxguu"
            }
          },
          "ip": {
            "type": "string",
            "x-stoplight": {
              "id": "4ycad4yfk7pyr"
            }
          },
          "version": {
            "type": "string",
            "x-stoplight": {
              "id": "30tauv4kymcpa"
            },
            "nullable": true
          },
          "status": {
            "type": "string",
            "x-stoplight": {
              "id": "r5wsgyrw4a8nf"
            },
            "nullable": true
          },
          "siteId": {
            "type": "string",
            "x-stoplight": {
              "id": "v76qp0jptbses"
            }
          },
          "createDate": {
            "type": "string",
            "x-stoplight": {
              "id": "29igo8h4hwgu1"
            },
            "format": "date-time"
          },
          "lastModified": {
            "type": "string",
            "x-stoplight": {
              "id": "tm1v7lg7b39cr"
            },
            "format": "date-time"
          }
        }
      }
    },
    "securitySchemes": {
      "PassportSession": {
        "type": "apiKey",
        "in": "cookie",
        "name": "connect.sid"
      }
    }
  },
  "security": [
    {
      "PassportSession": []
    }
  ]
}